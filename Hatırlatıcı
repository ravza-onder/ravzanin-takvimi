<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Hatırlatıcı</title>
  <link rel="manifest" href="manifest.json">
  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    body {
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(135deg, #fff1f2, #fce7f3);
      margin: 0;
      padding: 20px;
      color: #333;
      animation: fadeIn 1s ease-out;
    }

    h1 {
      text-align: center;
      color: #8b2e53;
      margin-bottom: 30px;
    }

    .input-group {
      display: flex;
      flex-direction: column;
      gap: 12px;
      margin-bottom: 30px;
      max-width: 400px;
      margin-left: auto;
      margin-right: auto;
      animation: fadeIn 1s ease-out;
    }

    input[type="text"], input[type="date"] {
      padding: 12px;
      border: 2px solid #f9a8d4;
      border-radius: 12px;
      font-size: 16px;
      outline: none;
      transition: border-color 0.3s;
    }

    input:focus {
      border-color: #ec4899;
    }

    button {
      padding: 12px 16px;
      border: none;
      background-color: #ec4899;
      color: white;
      font-weight: bold;
      border-radius: 12px;
      cursor: pointer;
      transition: background-color 0.3s, transform 0.2s;
    }

    button:hover {
      background-color: #db2777;
      transform: scale(1.02);
    }

    ul {
      list-style-type: none;
      padding: 0;
      max-width: 500px;
      margin: 0 auto;
    }

    li {
      background: #fff0f6;
      margin: 10px 0;
      padding: 14px 16px;
      border-left: 6px solid #f472b6;
      border-radius: 12px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      animation: fadeIn 0.5s ease-out;
    }

    .delete {
      background: #f43f5e;
      padding: 6px 12px;
      border-radius: 8px;
      color: white;
      cursor: pointer;
      font-size: 14px;
      transition: background-color 0.3s;
    }

    .delete:hover {
      background: #be123c;
    }
  </style>
</head>
<body>
  <h1>Hatırlatıcı</h1>
  <div class="input-group">
    <input type="text" id="event-name" placeholder="Etkinlik adı" />
    <input type="date" id="event-date" />
    <button onclick="addEvent()">Ekle</button>
  </div>
  <ul id="event-list"></ul>

  <script>
    const list = document.getElementById('event-list');

    function loadEvents() {
      list.innerHTML = '';
      const events = JSON.parse(localStorage.getItem('events') || '[]');
      const today = new Date().toISOString().slice(0, 10);

      events.forEach((event, index) => {
        const li = document.createElement('li');
        li.innerHTML = `
          <span>${event.name} - ${event.date}</span>
          <span class="delete" onclick="deleteEvent(${index})">Sil</span>
        `;
        list.appendChild(li);

        if (event.date === today) {
          notifyUser(event.name);
        }
      });
    }

    function addEvent() {
      const name = document.getElementById('event-name').value;
      const date = document.getElementById('event-date').value;
      if (!name || !date) return alert('Lütfen tüm alanları doldurun');

      const events = JSON.parse(localStorage.getItem('events') || '[]');
      events.push({ name, date });
      localStorage.setItem('events', JSON.stringify(events));
      document.getElementById('event-name').value = '';
      document.getElementById('event-date').value = '';
      loadEvents();
    }

    function deleteEvent(index) {
      const events = JSON.parse(localStorage.getItem('events') || '[]');
      events.splice(index, 1);
      localStorage.setItem('events', JSON.stringify(events));
      loadEvents();
    }

    function notifyUser(eventName) {
      if (Notification.permission === 'granted') {
        new Notification('Bugünkü etkinlik:', { body: eventName });
      } else if (Notification.permission !== 'denied') {
        Notification.requestPermission().then(permission => {
          if (permission === 'granted') {
            new Notification('Bugünkü etkinlik:', { body: eventName });
          }
        });
      }
    }

    window.onload = loadEvents;
  </script>
</body>
</html>
